@page "/movies/{Id:int}"

@inject IMoviesApi Movies
@inject NavigationManager Nav
@inject PersistentComponentState AppState

<h1 class="text-2xl font-semibold mb-2">Movie Details</h1>

@if (_loading)
{
    <p>Loading...</p>
}
else if (_error is not null)
{
    <p class="text-red-600">@_error</p>
}
else if (_movie is null)
{
    <p>Movie not found.</p>
}
else
{
    <div class="rounded border border-gray-200 bg-white shadow-sm p-4">
        <h2 class="text-xl font-semibold text-gray-900">@_movie.Title</h2>
        <div class="text-sm text-gray-600 mt-1">Director: @_movie.Director</div>
        <div class="mt-2 text-gray-900">Rating: @_movie.Rating</div>
    </div>
    <button class="mt-3 inline-flex items-center rounded-md border border-gray-400 px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50" @onclick="GoBack">Back</button>
}

@code {
    [Parameter] public int Id { get; set; }

    private bool _loading = true;
    private string? _error;
    private GetMovieResponse? _movie;
    private string CacheKey => $"Movies_Details_{Id}";

    protected override async Task OnParametersSetAsync()
    {
        await LoadAsync();
    }

    private async Task LoadAsync()
    {
        _loading = true;
        _error = null;
        try
        {
            if (AppState.TryTakeFromJson<GetMovieResponse>(CacheKey, out var cached) && cached is not null)
            {
                _movie = cached;
            }
            else
            {
                var response = await Movies.GetByIdAsync(new GetMovieRequest { Id = Id });
                if (response is null)
                {
                    _movie = null;
                    return;
                }
                _movie = response;
                AppState.RegisterOnPersisting(async () =>
                {
                    AppState.PersistAsJson(CacheKey, _movie);
                    await Task.CompletedTask;
                });
            }
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _loading = false;
        }
    }

    private void GoBack() => Nav.NavigateTo("/movies");
}
