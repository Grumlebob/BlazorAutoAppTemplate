@page "/movies/create"

@inject IMoviesApi Movies
@inject NavigationManager Nav

<h1 class="text-2xl font-semibold mb-2">Create Movie</h1>

<p class="text-sm text-gray-500 mb-3">rendermode: @RendererInfo.Name</p>

<EditForm Model="_model" OnValidSubmit="HandleSubmit" class="max-w-xl">
    <DataAnnotationsValidator />
    <ValidationSummary class="mb-3 text-sm text-red-600" />
    <div class="mb-3">
        <label class="block text-sm font-medium text-gray-700 mb-1">Title</label>
        <InputText class="block w-full rounded-md border border-gray-300 px-3 py-2 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500" @bind-Value="_model.Title" />
        <ValidationMessage For="() => _model.Title" class="text-sm text-red-600" />
    </div>
    <div class="mb-3">
        <label class="block text-sm font-medium text-gray-700 mb-1">Director</label>
        <InputText class="block w-full rounded-md border border-gray-300 px-3 py-2 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500" @bind-Value="_model.Director" />
        <ValidationMessage For="() => _model.Director" class="text-sm text-red-600" />
    </div>
    <div class="mb-4">
        <label class="block text-sm font-medium text-gray-700 mb-1">Rating</label>
        <InputNumber class="block w-32 rounded-md border border-gray-300 px-3 py-2 text-gray-900 shadow-sm focus:border-blue-500 focus:ring-blue-500" @bind-Value="_model.Rating" />
        <ValidationMessage For="() => _model.Rating" class="text-sm text-red-600" />
    </div>
    <div class="flex items-center gap-2">
        <button class="inline-flex items-center rounded-md bg-blue-600 px-3 py-2 text-sm font-medium text-white shadow-sm hover:bg-blue-700" type="submit">Save</button>
        <button class="inline-flex items-center rounded-md border border-gray-400 px-3 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50" type="button" @onclick="GoBack">Cancel</button>
    </div>
</EditForm>

@code {
    private CreateMovieRequest _model = new() { Title = string.Empty, Rating = 0 };

    private async Task HandleSubmit()
    {
        var response = await Movies.CreateAsync(_model);
        if (response is not null) Nav.NavigateTo("/movies");
    }
    private void GoBack() => Nav.NavigateTo("/movies");
}
