@page "/"

<PageTitle>Home</PageTitle>

<h1 class="text-3xl font-bold text-black">Hello Hafnia!</h1>

<p class="text-black mb-4">rendermode: @RendererInfo.Name</p>

<div class="mb-2 text-black">Start Hull Inspection Email</div>
<select class="border rounded px-2 py-1 text-black" @onchange="OnCompanyChanged">
    <option value="">-- Select company --</option>
    @foreach (var c in _companies)
    {
        <option value="@c.Id">@c.Name</option>
    }
    </select>

@if (!string.IsNullOrWhiteSpace(_status))
{
    <div class="mt-2 text-black">@_status</div>
}

<div class="mt-6">
    <button class="bg-gray-800 text-white px-3 py-2 rounded" @onclick="GoToAdminFlow">Admin: Open Demo Inspection Flow</button>
    <div class="text-gray-600 mt-1">Opens a pre-seeded verified flow.</div>
</div>

@code {
    [Inject] private IStartHullInspectionEmailApi Api { get; set; } = default!;
    [Inject] private NavigationManager Nav { get; set; } = default!;

    private List<CompanyListItem> _companies = new();
    private string? _status;
    private static readonly Guid AdminFlowId = Guid.Parse("11111111-1111-1111-1111-111111111111");

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var res = await Api.GetCompaniesAsync();
            _companies = res.Items;
        }
        catch (Exception ex)
        {
            _status = ex.Message;
        }
    }

    private async Task OnCompanyChanged(ChangeEventArgs e)
    {
        _status = null;
        var val = e.Value?.ToString();
        if (string.IsNullOrWhiteSpace(val)) return;
        if (!int.TryParse(val, out var id)) return;
        try
        {
            var res = await Api.StartAsync(new StartHullInspectionRequest { CompanyId = id });
            _status = res.Success ? $"Email queued for company #{id}" : $"Failed: {res.Error}";
        }
        catch (Exception ex)
        {
            _status = ex.Message;
        }
    }

    private void GoToAdminFlow()
    {
        Nav.NavigateTo($"/inspection/{AdminFlowId}/flow");
    }
}

